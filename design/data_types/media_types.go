package design

import (
	. "github.com/goadesign/goa/design"
	. "github.com/goadesign/goa/design/apidsl"
)

var BackboneElementMedia = MediaType("application/vnd.backbone.element+json", func() {
	TypeName("BackboneElementMedia")
	Reference(BackboneElementPayload)
	Attributes(func() {
		Attribute("element")
		Attribute("modifierExtension")
	})
	View("default", func() {
		Description("Default view for BackboneElement")
		Attribute("element")
		Attribute("modifierExtension")
	})
})
var ElementMedia = MediaType("application/vnd.element+json", func() {
	TypeName("ElelmentMedia")
	Reference(ElementPayload)
	Attributes(func() {
		Attribute("id")
		Attribute("extension")
	})
	View("default", func() {
		Description("Default view for Element")
		Attribute("id")
		Attribute("extension")
	})
})
var ExtensionMedia = MediaType("application/vnd.extension+json", func() {
	TypeName("ExtensionMedia")
	Reference(ExtensionPayload)
	Attributes(func() {
		Attribute("url")
		Attribute("ValueAddress")
		Attribute("ValueAnnotation")
		Attribute("ValueAttachment")
		Attribute("ValueBase64Binary")
		Attribute("ValueBoolean")
		Attribute("ValueCode")
		Attribute("ValueCodeableConcept")
		Attribute("ValueCoding")
		Attribute("ValueContactPoint")
		Attribute("ValueDate")
		Attribute("ValueDateTime")
		Attribute("ValueDecimal")
		Attribute("ValueHumanName")
		Attribute("ValueId")
		Attribute("ValueIdentifier")
		Attribute("ValueInstant")
		Attribute("ValueInteger")
		Attribute("ValueMarkdown")
		Attribute("ValueMeta")
		Attribute("ValueOid")
		Attribute("ValuePeriod")
		Attribute("ValuePositiveInt")
		Attribute("ValueQuantity")
		Attribute("ValueRange")
		Attribute("ValueRatio")
		Attribute("ValueReference")
		Attribute("ValueSampledData")
		Attribute("ValueSignature")
		Attribute("ValueString")
		Attribute("ValueTime")
		Attribute("ValueTiming")
		Attribute("ValueUnsignedInt")
		Attribute("ValueUri")
	})
	View("default", func() {
		Description("Default view for Extension element")
		Attribute("url")
		Attribute("ValueAddress")
		Attribute("ValueAnnotation")
		Attribute("ValueAttachment")
		Attribute("ValueBase64Binary")
		Attribute("ValueBoolean")
		Attribute("ValueCode")
		Attribute("ValueCodeableConcept")
		Attribute("ValueCoding")
		Attribute("ValueContactPoint")
		Attribute("ValueDate")
		Attribute("ValueDateTime")
		Attribute("ValueDecimal")
		Attribute("ValueHumanName")
		Attribute("ValueId")
		Attribute("ValueIdentifier")
		Attribute("ValueInstant")
		Attribute("ValueInteger")
		Attribute("ValueMarkdown")
		Attribute("ValueMeta")
		Attribute("ValueOid")
		Attribute("ValuePeriod")
		Attribute("ValuePositiveInt")
		Attribute("ValueQuantity")
		Attribute("ValueRange")
		Attribute("ValueRatio")
		Attribute("ValueReference")
		Attribute("ValueSampledData")
		Attribute("ValueSignature")
		Attribute("ValueString")
		Attribute("ValueTime")
		Attribute("ValueTiming")
		Attribute("ValueUnsignedInt")
		Attribute("ValueUri")
	})
})

var AddressMedia = MediaType("application/vnd.address+json", func() {
	TypeName("AddressMedia")
	Reference(AddressPayload)
	Attributes(func() {
		Attribute("use")
		Attribute("type")
		Attribute("line")
		Attribute("city")
		Attribute("distinct")
		Attribute("state")
		Attribute("postalCode")
		Attribute("country")
	})
	View("default", func() {
		Description("Default view for Address data type")
		Attribute("use")
		Attribute("type")
		Attribute("line")
		Attribute("city")
		Attribute("distinct")
		Attribute("state")
		Attribute("postalCode")
		Attribute("country")
	})
})
var AnnotationMedia = MediaType("application/vnd.annotation+json", func() {
	TypeName("AnnotationMedia")
	Reference(AnnotationPayload)
	Attributes(func() {
		Attribute("authorReference")
		Attribute("authorString")
		Attribute("time")
	})
	View("default", func() {
		Description("Default view for Annotation data type")
		Attribute("authorReference")
		Attribute("authorString")
		Attribute("time")
	})
})
var AttachmentMedia = MediaType("application/vnd.attachment+json", func() {
	TypeName("AttachmentMedia")
	Reference(AttachmentPayload)
	Attributes(func() {
		Attribute("contentType")
		Attribute("data")
		Attribute("size")
		Attribute("hash")
		Attribute("title")
		Attribute("creation")
	})
	View("default", func() {
		Description("Default view for attachment data type")
		Required("contentType")
		Attribute("contentType")
		Attribute("data")
		Attribute("size")
		Attribute("hash")
		Attribute("title")
		Attribute("creation")
	})
})
var CodingMedia = MediaType("application/vnd.coding+json", func() {
	TypeName("CodingMedia")
	Reference(CodingPayload)
	Attributes(func() {
		Attribute("system")
		Attribute("version")
		Attribute("code")
		Attribute("display")
		Attribute("userSelected")
	})
	View("default", func() {
		Description("Default view for coding data type")
		Attribute("system")
		Attribute("version")
		Attribute("code")
		Attribute("display")
		Attribute("userSelected")
	})
})
var CodeableConceptMedia = MediaType("application/vnd.codeable.concept+json", func() {
	TypeName("CodeableConceptMedia")
	Reference(CodeableConceptPayload)
	Attributes(func() {
		Attribute("coding")
		Attribute("text")
	})
	View("default", func() {
		Description("Default view for CodeableConcept data type")
		Attribute("coding")
		Attribute("text")
	})
})
var ContactPointMedia = MediaType("application/vnd.contact.point+json", func() {
	TypeName("ContactPointMedia")
	Reference(ContactPointPayload)

	Attributes(func() {
		Attribute("system")
		Attribute("value")
		Attribute("use")
		Attribute("rank")
	})
	View("default", func() {
		Description("Default view for ContactPoint data type")
		Attribute("system")
		Attribute("value")
		Attribute("use")
		Attribute("rank")
	})
})

//Goa has a function named Reference. Changed to HL7Reference
var HL7ReferenceMedia = MediaType("application/vnd.reference+json", func() {
	TypeName("HL7ReferenceMedia")
	Reference(HL7ReferencePayload)

	Attributes(func() {
		Attribute("reference")
		Attribute("display")
	})
	View("default", func() {
		Description("Default view for Referece data type.")
		Attribute("reference")
		Attribute("display")
	})
})
var HumanNameMedia = MediaType("application/vnd.human.name+json", func() {
	TypeName("HumanNameMedia")
	Reference(HumanNamePayload)
	Attributes(func() {
		Attribute("use")
		Attribute("family")
		Attribute("given")
		Attribute("prefix")
		Attribute("suffix")
		Attribute("period")
	})
	View("default", func() {
		Description("A reference to a code defined by a terminology system")
		Required("use")
		Attribute("use")
		Attribute("family")
		Attribute("given")
		Attribute("prefix")
		Attribute("suffix")
		Attribute("period")
	})
})
var IdentifierMedia = MediaType("application/vnd.identifier+json", func() {
	TypeName("IdentifierMedia")
	Reference(IdentifierPayload)
	Attributes(func() {
		Attribute("use")
		Attribute("type")
		Attribute("system")
		Attribute("value")
		Attribute("period")
		Attribute("assigner")
	})
	View("default", func() {
		Description("Default view for identifier resource")
		Attribute("use")
		Attribute("type")
		Attribute("system")
		Attribute("value")
		Attribute("period")
		Attribute("assigner")
	})
})
var MetaMedia = MediaType("application/vnd.meta+json", func() {
	TypeName("MetaMedia")
	Reference(MetaPayload)
	Attributes(func() {
		Attribute("versionId")
		Attribute("lastUpdated")
		Attribute("profile")
		Attribute("security")
		Attribute("tag")
	})
	View("default", func() {
		Description("Default view for Meta data type")
		Attribute("versionId")
		Attribute("lastUpdated")
		Attribute("profile")
		Attribute("security")
		Attribute("tag")
	})
})
var PeriodMedia = MediaType("application/vnd.period+json", func() {
	TypeName("PeriodMedia")
	Reference(PeriodPayload)
	Attributes(func() {
		Attribute("start")
		Attribute("end")
	})
	View("default", func() {
		Attribute("start")
		Attribute("end")
	})
})
var QuantityMedia = MediaType("application/vnd.quantity+json", func() {
	TypeName("QuantityMedia")
	Reference(QuantityPayload)
	Attributes(func() {
		Attribute("value")
		Attribute("comparator")
		Attribute("unit")
		Attribute("system")
		Attribute("code")
	})
	View("default", func() {
		Description("A reference to a code defined by a terminology system")
		Required("comparator")
		Attribute("value")
		Attribute("comparator")
		Attribute("unit")
		Attribute("system")
		Attribute("code")
	})
})
var RangeMedia = MediaType("application/vnd.range+json", func() {
	TypeName("RangeMedia")
	Reference(RangePayload)
	Attributes(func() {
		Attribute("low")
		Attribute("high")
	})
	View("default", func() {
		Description("Default view for Range data type")
		Attribute("low")
		Attribute("high")
	})
})
var RatioMedia = MediaType("application/vnd.ratio+json", func() {
	TypeName("RatioMedia")
	Reference(RatioPayload)

	Attributes(func() {
		Attribute("numerator")
		Attribute("denominator")
	})
	View("default", func() {
		Description("Default view for Ratio data type")
		Attribute("numerator")
		Attribute("denominator")
	})
})

//This is currently an Element.
var RepeatMedia = MediaType("application/vnd.repeat+json", func() {
	TypeName("RepeatMedia")
	Reference(RepeatPayload)
	Attributes(func() {
		Attribute("bounds")
		Attribute("count")
		Attribute("duration")
		Attribute("durationUnits")
		Attribute("frequency")
		Attribute("frequencyMax")
		Attribute("period")
		Attribute("periodMax")
		Attribute("periodUnits")
		Attribute("when")
	})
	View("default", func() {
		Description("Default view of Repeat element")
		Attribute("bounds")
		Attribute("count")
		Attribute("duration")
		Attribute("durationUnits")
		Attribute("frequency")
		Attribute("frequencyMax")
		Attribute("period")
		Attribute("periodMax")
		Attribute("periodUnits")
		Attribute("when")
	})
})
var SampleDataMedia = MediaType("application/vnd.sample.data+json", func() {
	TypeName("SampleDataMedia")
	Reference(SampleDataPayload)
	Attributes(func() {
		Attribute("origin")
		Attribute("period")
		Attribute("factor")
		Attribute("lowerLimit")
		Attribute("upperLimit")
		Attribute("dimensions")
		Attribute("data")
	})
	View("default", func() {
		Description("Default view of Repeat element")
		Attribute("origin")
		Attribute("period")
		Attribute("factor")
		Attribute("lowerLimit")
		Attribute("upperLimit")
		Attribute("dimensions")
		Attribute("data")
	})
})
var TimingMedia = MediaType("application/vnd.timing+json", func() {
	TypeName("TimingMedia")
	Reference(TimingPayload)
	Attributes(func() {
		Attribute("event")
		Attribute("repeat")
		Attribute("code")
	})
	View("default", func() {
		Description("Default view of Timing data type")
		Attribute("event")
		Attribute("repeat")
		Attribute("code")
	})
})
