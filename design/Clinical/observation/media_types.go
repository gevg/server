package design

import (
	. "github.com/goa-fhir/server/design/DataType/data_types"
	. "github.com/goadesign/goa/design"
	. "github.com/goadesign/goa/design/apidsl"
)

// Observation is the observation resource media type------------------------------------------------------------------------------------------------
var ObservationMedia = MediaType("application/vnd.observation+json", func() {
	TypeName("ObservationMedia")
	Reference(ObservationPayload)
	Attributes(func() {
		Attribute("meta")
		Attribute("identifier")
		Attribute("status")
		Attribute("category")
		Attribute("code")
		Attribute("encounter")
		Attribute("effectiveDateTime")
		Attribute("effectivePeriod")
		Attribute("issued")
		Attribute("performer")
		Attribute("effectiveDateTime")

		Attribute("valueQuantity")
		Attribute("valueCodeableConcept")
		Attribute("valueString")
		Attribute("valueRange")
		Attribute("valueSampledData")
		Attribute("valueAttachment")
		Attribute("valueTime")
		Attribute("valueDatTime")
		Attribute("valuePeriod")

		Attribute("dateAbsentReason")
		Attribute("interpretation")
		Attribute("comments")
		Attribute("bodySite")
		Attribute("method")
		Attribute("specimen")
		Attribute("device")
		Attribute("referenceRange")
		Attribute("related")
		Attribute("component")
	})
	View("default", func() {
		Description("Default view for Observation resource.")
		Attribute("meta")
		Attribute("identifier")
		Attribute("status")
		Attribute("category")
		Attribute("code")
		Attribute("encounter")
		Attribute("effectiveDateTime")
		Attribute("effectivePeriod")
		Attribute("issued")
		Attribute("performer")
		Attribute("effectiveDateTime")

		Attribute("valueQuantity")
		Attribute("valueCodeableConcept")
		Attribute("valueString")
		Attribute("valueRange")
		Attribute("valueSampledData")
		Attribute("valueAttachment")
		Attribute("valueTime")
		Attribute("valueDatTime")
		Attribute("valuePeriod")

		Attribute("dateAbsentReason")
		Attribute("interpretation")
		Attribute("comments")
		Attribute("bodySite")
		Attribute("method")
		Attribute("specimen")
		Attribute("device")
		Attribute("referenceRange")
		Attribute("related")
		Attribute("component")
	})
})
var ReferenceRangeMedia = MediaType("application/vnd.reference.range+json", func() {
	TypeName("ReferenceRangeMedia")
	Reference(ReferenceRangePayload)
	Attributes(func() {
		Attribute("low")
		Attribute("high")
		Attribute("meaning")
		Attribute("age")
		Attribute("text")
	})
	View("default", func() {
		Description("Default view for Collection Element.")
		Attribute("low")
		Attribute("high")
		Attribute("meaning")
		Attribute("age")
		Attribute("text")
	})
})
var RelatedMedia = MediaType("application/vnd.related+json", func() {
	TypeName("RelatedMedia")
	Reference(RelatedPayload)
	Attributes(func() {
		Attribute("type")
		Attribute("target")
	})
	View("default", func() {
		Description("Default view for Treatment element.")
		Attribute("type")
		Attribute("target")
	})
})
var ComponentMedia = MediaType("application/vnd.component+json", func() {
	TypeName("ComponentMedia")
	Reference(ComponentPayload)
	Attributes(func() {
		Attribute("code")
		Attribute("valueQuantity")
		Attribute("valueCodeableConcept")
		Attribute("valueRange")
		Attribute("valueSampledData")
		Attribute("valueAttachment")
		Attribute("valueTime")
		Attribute("valueDatTime")
		Attribute("valuePeriod")
		Attribute("dataAbsentReason")
		Attribute("referenceRange")
	})
	View("default", func() {
		Description("Default view for Container element.")
		Attribute("code")
		Attribute("valueQuantity")
		Attribute("valueCodeableConcept")
		Attribute("valueRange")
		Attribute("valueSampledData")
		Attribute("valueAttachment")
		Attribute("valueTime")
		Attribute("valueDatTime")
		Attribute("valuePeriod")
		Attribute("dataAbsentReason")
		Attribute("referenceRange")
	})
})
