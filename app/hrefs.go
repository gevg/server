// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/goa-fhir/server/design
// --out=$(GOPATH)\src\github.com\goa-fhir\server
// --version=v1.1.0-dirty
//
// API "Secure": Application Resource Href Factories
//
// The content of this file is auto-generated, DO NOT MODIFY

package app

import (
	"fmt"
	"strings"
)

// AllergyIntoleranceHref returns the resource href.
func AllergyIntoleranceHref(patientID, allergyIntoleranceID interface{}) string {
	parampatientID := strings.TrimLeftFunc(fmt.Sprintf("%v", patientID), func(r rune) bool { return r == '/' })
	paramallergyIntoleranceID := strings.TrimLeftFunc(fmt.Sprintf("%v", allergyIntoleranceID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/nosh/patients/%v/allergy.intolerance/%v", parampatientID, paramallergyIntoleranceID)
}

// NutritionRequestHref returns the resource href.
func NutritionRequestHref(patientID, nutritionRequestID interface{}) string {
	parampatientID := strings.TrimLeftFunc(fmt.Sprintf("%v", patientID), func(r rune) bool { return r == '/' })
	paramnutritionRequestID := strings.TrimLeftFunc(fmt.Sprintf("%v", nutritionRequestID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/nosh/patients/%v/nutrition.requests/%v", parampatientID, paramnutritionRequestID)
}

// ObservationHref returns the resource href.
func ObservationHref(patientID, observationID interface{}) string {
	parampatientID := strings.TrimLeftFunc(fmt.Sprintf("%v", patientID), func(r rune) bool { return r == '/' })
	paramobservationID := strings.TrimLeftFunc(fmt.Sprintf("%v", observationID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/nosh/patients/%v/observation/%v", parampatientID, paramobservationID)
}

// PatientHref returns the resource href.
func PatientHref(patientID interface{}) string {
	parampatientID := strings.TrimLeftFunc(fmt.Sprintf("%v", patientID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/nosh/patients/%v", parampatientID)
}

// UserHref returns the resource href.
func UserHref(userID interface{}) string {
	paramuserID := strings.TrimLeftFunc(fmt.Sprintf("%v", userID), func(r rune) bool { return r == '/' })
	return fmt.Sprintf("/nosh/users/%v", paramuserID)
}
